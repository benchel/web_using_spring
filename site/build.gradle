plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web:2.7.10'
	
	// DB
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.11'
	// Logging
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	
	// templates
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.0.0'
	
	// Auto restart
	implementation 'org.springframework.boot:spring-boot-devtools'
		
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// src/main/java 아래의 모든 소스파일에 대한 컴파일 옵션 지정
compileJava {
	options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile){
	options.encoding = 'UTF-8'
}

/*
tasks.named('test') {
	useJUnitPlatform()
}
*/